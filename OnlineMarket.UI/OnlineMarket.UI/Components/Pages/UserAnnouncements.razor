@page "/user/announcements"
@using OnlineMarket.Application.Announcements.GetAllAnnouncements
@using OnlineMarket.Domain.Announcements
@using OnlineMarket.Domain.Users
@using OnlineMarket.UI.Announcements
@inject IAnnouncementHttpService _announcementService
<AuthorizeView Roles="@Roles.RegularUser">
    <Authorized>
    <div class="row">
        @foreach (var announcement in _announcements)
        {
            <div class="col-md-12 col-lg-4">
                <div class="card">
                    <h1 class="card-header">@announcement.header</h1>
                    <div class="card-body">
                        <p>@announcement.Price $</p>
                        <p>@announcement.City</p>
                        <div class="accordion" id="announcementDescription">
                            <div class="accordion-item">
                                <h2 class="accordion-header" id="headingOne">
                                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#@("c" + announcement.Id)" aria-expanded="false" aria-controls="@announcement.Id">
                                        Description
                                    </button>
                                </h2>
                                <div id="@("c" + announcement.Id)" class="accordion-collapse collapse show" aria-labelledby="headingOne" data-bs-parent="#announcementDescription">
                                    <div class="accordion-body">
                                        <p>@announcement.Description</p>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-footer">
                            <div class="row">
                                <div class="col-6">
                                    @if(announcement.Status == AnnouncementStatus.Waiting)
                                    {
                                        <div class="alert-info alert-warning">
                                            <p>Waiting</p>
                                        </div>
                                    }
                                    @if (announcement.Status == AnnouncementStatus.Rejected)
                                    {
                                        <div class="alert-info alert-danger">
                                            <p>Rejected</p>
                                        </div>
                                    }
                                    @if (announcement.Status == AnnouncementStatus.Accepted)
                                    {
                                        <div class="alert-info alert-success">
                                            <p>Accepted</p>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    </Authorized>
    <NotAuthorized>
        <RedirectToMainPage />
    </NotAuthorized>
</AuthorizeView>

@code {
    private IEnumerable<AnnouncementResponse> _announcements = new List<AnnouncementResponse>();

    protected async override Task OnInitializedAsync()
    {
        var result = await _announcementService.GetUserAnnouncements();

        if (result.IsSucceeded)
        {
            _announcements = result.Body!;
        }
    }
}
